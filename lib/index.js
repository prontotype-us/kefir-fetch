// Generated by CoffeeScript 1.9.3
var Kefir, default_options, defaults, fetch$, makeQueryString;

Kefir = require('kefir');

defaults = function(o1, o2) {
  var k, v;
  for (k in o2) {
    v = o2[k];
    if (o1[k] == null) {
      o1[k] = v;
    }
  }
  return o1;
};

makeQueryString = function(query) {
  var k, s, v;
  s = "?";
  for (k in query) {
    v = query[k];
    if (v != null) {
      s += k + "=" + v + "&";
    }
  }
  return s;
};

default_options = {
  headers: {
    'Accept': 'application/json',
    'Content-Type': 'application/json'
  },
  credentials: 'same-origin'
};

fetch$ = function(method, url, options) {
  if (options == null) {
    options = {};
  }
  options.method = method;
  if (options.query != null) {
    url += makeQueryString(options.query);
    delete options.query;
  }
  if (options.body != null) {
    options.body = JSON.stringify(options.body);
  }
  options = defaults(options, default_options);
  return Kefir.fromPromise(fetch(url, options).then(function(res) {
    return res.json();
  }));
};

module.exports = fetch$;
